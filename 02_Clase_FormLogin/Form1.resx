<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        II7//Of/A586U9xegVX6AAAAAElFTkSuQmCC
</value>
  </data>
</root>