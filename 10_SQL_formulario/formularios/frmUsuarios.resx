<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAf6klEQVR4Xu2dCfx+1ZzHiRYplZRsFRFFyjahoogZIqFSIlLRoizRyJZ9rySyxKtGKo2IaorIEgbZ
        992MNLaxZ2YYZnh/nvv96ff/97v3nHuf597n3vt83q/X51X///97zj3nOXc5y/d8z3WMMcYYY4wxxhhj
        jDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhj
        jDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjhsNf/vKXtdHmaBt0d7Q7
        2hndBd0GbRymxpgho4cZPRKdgC5G30N/Ril+jT6D/gk9DenlsEZka4zpKzyo26KXoS+i/0Oz4hfoPPQo
        tE5czhgzb3gg10NPRp9FXfAbdBq6exTBGNM1PIDro6egn6B58Qn00CiSMaZteODWRMeg36K+cBnaNopo
        jGkDHjLN2H9FT1wP+RM6Ga0fxTXGzAIeKn31NZv//6jvaLXB8wPGzAIepi3Rp/VkzQitDvwK/RDpYf0+
        +iX6A5oVyutodN2ohjGmLjxA6vLr4WyKHsSPouPRXuj2aM3IfhX4++siOQnJOUiTi+9B01xbvAOteD1j
        TAU8OA9B/62nqCb/i96H5AR0g8iuEaRfA90bvRGp19CE96MbRpbGmBQ8MAcgTarV4XfoFeimkc1MIV+5
        ER+KNGSoizwLN4isjDFl8KDoy1/n4dcX/1Voo8iiVbjO9dFB6GeoDh9D9iI0pgwekJ3Qf+lpyeRydMdI
        3ilcd0N0KqqzMnE+ul5kYYxZggdjC5Q76aZNPS9Ac3+YKIN6LNorkMsJkdQYI3gotM7/qcnjkUa79XaP
        pL2A8twKaQNSDuox7BlJjTE8EK+ZPBpp5Pe/QyTrFZRLm5I+oEJmoBWFLSOpMYsLD8IuKGcc/R/oNpGs
        l1A+rRRo2S+HSyOZMYsJD4Fm1L80eRyq0RbcXn75V4dyros+qUJnsG8kMyYPbhrdYLuiw9FJSE4vH0Kf
        Q19AGkt/EJ2FXoj2R3dEvXNLpUzPQCm0JHjfSDIIKO9N0L+r8AmuQr3bPESZNCcjL0zdY69FFyG5Y38N
        yQ/iW0j326XoLUjt+GBkX4c24IeVP/yzkdaS/4ia8FN0DtoPTeUhNwsow0YoZ0vvcZFkUFDuHZF8FFK8
        IJLMFcqhEGpHIg1hfo+aoNUZOT29CG0dWZsm8APKDVUhqPTQz3oX3FJUm23icp3DtZ+ngiTQF2aw8fgo
        +zMntahGS59z6wVwbX3pte+h6YelCvVGH4OuH5czKfix9OA/Dn0btY12xinW3Z3i8p3A9W6I/hNV8T9o
        q0gySCi/5jhylgePjSSdwTXvi/Rx6QINGw5GDq5aBT/QXdEst77monG29tt38iXiOorhl+L4MB801ONe
        KBWgVMubnXwluc5mSLsU5xFb4QrkWAmrw49yPfRilBO2uk2uRDtHsVqDa6QCeP4crRvmg4e6vHtSq2oe
        HOatwTUegeRINU/0MtS9bpdowQ9xc6Q9631BvYHjUCurBuSr0N0pBjnxVwb1Uc8u9cU9J8xnDnlrVv+U
        yVX6g+75m0URFxN+AAWoyFkumgdnoJl3S8lTcfuruBqNbjmJOqW8BBX7YOZDMPLUfEuuc1LX/BtazNUC
        Kn43lJoIK0Oz+BcgbYjROv9uSPlJmtXdE2ltVg+xfuSmaP13pltYyS/l+HNGmI4K6qXl1xQzDTFOflpq
        bTqnpB7Ll9EbkJYHH4TuiXSP6Vi1B6AnIMVg0Ne8aUg1DffuGkVeDKjwHVDdh19rs6cjOQHVGj9hvzWS
        U5Di4NVFS0QzGa+RjxxkUhNiu4X5qKBeN0Apv4eTwnxqyEvX+/gk13rImewotGlklQX2ut4+6EKUauPV
        0UtgMXoCVPQWqM6DqAf/JWiTyKIx5KGxoJYYFQyzDm+OLKaCfBSmqwq9FEe7VETd5IhVxZfDdCrIR5PK
        6iHWQYecPCCymAry0dBWZyvWeRGop7pZZDFOqKDWhfVD5/JetHkknxnkuQ5SoMw6zh+HRvLGkMeJRVal
        vCtMRwn1O6SoZinqdt8ozBtDHhoa5qKv72PRzCd9yVPekLnbpMWH0XhXB6icxks5yAnmsEjWGlzjHig3
        xp0mqbaLpI0gvU7preKIMB0l1E9HkKeYap2c9JoPyl1O1tj95pG0FchfOyRfh3L9DnrhGj1zqJgmUHK6
        RNorvlMkax2uJR/w3IkijQ8bv6FJ+4NJLuXsGKajhTqm1uEPCNPakFYbxXJXlVpZ5SmDa6n3k/Niks1d
        Itk4oEIak+nhSSG/8DtHss7gmloqynULPTqS1YJ0GnakXoCdBPacJ9Qx9bJ9UZjWhrSpJdYlNLPfip9H
        FVxzb5TzEtAegvHMBVGZwybVqkbBMO8VSTqHa2+AtOyTQkuQG0eybEijmH9V/CxMRw311ORYFaeFaS1I
        p+FFzpyOJiLn9nBx7SdOSpHmwEgybKiIZt5zumWPjyRzgzLkBuas/ZUizZ2KpKV8LUxHDfXUnosqGnkE
        kk778lN8Fc3dxZoy6KCVFN9Fw58QpBKKIZ/irDCfO5Qlx2FF49ha3nrYaw6kik+H6aihnlp9qeJfwjQb
        0mhpOeWIo4nlO0SSuUI5NBxUcJEU+0WS4UIlPl/UpRQ9TK2cZtMUypPjOnpkmGeBvc7cq+JDYTpqqOcx
        RXVL+ViYZkOa1EtF9Gp2nfLcB6VWBi4P82FCBRSKK8Uzwrw3UKZtUGrCrtYXG/v7FclKqX3jDxHq+ayi
        uqV8JEyzwF6HmqYcuxRQtXenElGmd01KV45eEL0OBFsJhU+t++tAifXCvFdQrnMnJazmdmGeBFsdslnF
        F8J01FDPlxbVLeXiMM0Ce8UbSHFMmPcKyrU9SvUCnhvmw4PCpza+vCpMewdlSz2w4qgwT4LtdkWSUr4X
        pqOGer6+qG4p7wzTLLBPef1pdWlq78K2oGwfmZSynI+H6bCg4HKwSXWjp/KsaxvKlwpL9p4wTYKtNgJV
        oSWs0ceOo44pb8gTwzQL7HU+YhW9mWBeCcqnHYVV6L4Y3vHqFHqvSfHL+W6Y9hbKmDqx55dhmgRbjVU1
        E13FbcN8tFBHLW9V8cwwTYLtWii19r9PmPcSypfzobx/mA8HCq0w3lXMZIddm1BGxXpPkb2DC9uvFElK
        GfWZedRPHpepo8+zfwNsNVlbhcbXU+8ibRvKmPKSzR5q9gYKnfL4OiRMewtl3KQoaiX3CfMk2L6zSFLK
        q8N0lFA/BdFIkT3rjW2ql/mDMO01lDPlxHRKmA4HCp0KxrBLmPYaypnyDDwoTJNgm4qT/9kwHSXUT3Ed
        qtBvne2mi+3TJqnKuSRMew3lfHpR3FJqO0fNHQqd8qsfxOmwlDO1n/upYZoE29TKgjaKtLo9dZ5Qt9Rv
        eWGYZoF9ygHoLWHaayinIglV8YkwHQ4UOrX19SZh2msoZ2qW+flhmgRbTVqljp16epiPCuqVEw25llMY
        9qlJ2hPCtNdQzr8vilvKTCIldQqFlvdVFb1dm10O5dRBo1W8NEyzwF4xBqsYpUMQ9crZqnv7MM8CewXa
        qOLlYdprKKeCmFTxrTAdDip0UfZSBhETnXKm9q8/K0yzwP7xRbJKBnUacArqo9l/eX1W8c0wz4Y0qTmF
        14Vpr6GcDy2KW8pnwnQ4UOjUg7NtmPYayvmdorilPClMs8BecQfknVbF8CZ9KqA+TymqVclzwjwb0qQm
        Vc8M015DORWotooPhOlwUKGLspfS+zVvyqggpqkjrh8V5tmQ5swiaSlav753mA8a6rE+Sg0H5Qhzq0iS
        DWkOnaQu51Nh2msop44Kq+LcMB0OFDq1tlmr6zwPKGPK0UTcM8yzIU3OBhadHzj4sFDU4eWT2lRzfpjX
        gnQpvwJtNe/9b0gZU/NCrwjT4UChjyjKXkrvu7mUMRXKTMt2jfy0SZcTHv3wMB8klF8z/zkn5jQKAku6
        HEetzmNM1oHy6Tj81CE5wwsMQqFTa96/Q2uHeS+hfKlTbWtPXC1B2n8osqhEcwW9iGJTF8qtcNip3aDi
        w5GkEaS/qsimlF4vq1I+HTWWYnj3AIVeD6XGz48M895B2TRZl9q8M9UkE+lTW0GF/MRvEEkGA2U+eVL6
        ajTXMVUodNLr8Jgqeu1dSfleXRSzFAWhHWZsQAp+6aQK5VwUpr2DsuVEMt43zBtB+rug1OYYcR4azHwA
        ZX3SpNRp3hFJGkMeBxdZVdLLbeeUS72kH09KWE6vtzNXQuEPL+pQir4AvWscyqTZ/1SYKfUOpo5mRB6p
        GeAlau2TnxeUcw+U81L7CaodXn11yEPzAKlY+71cDqRcqVUM0dtechIKf3OU2uucHVSjKyhT6gw78b4w
        nwry0VdA4apzOAl1fqBFLpRNu/Nyj8neK5JNDXmlhlJ6IfXK74Ty6DTh1NH1mgMaXjCQ5VCB902qUs0D
        w3zuUJYbo5yjyx8cSaaGvHRGYc5XU7wVrRVJewNlkodjbh3OjmQzgfweVWRbyWVh3gsoz4uKYlXyxjAf
        LlRi56IulejgkF4ci0U5coKBKqb7TL/E5JcKl70cbbXuxVHSlEPDpZwJvyW+iWba1uSnMqQ2n4nWD5zN
        gXLohZ+KZKSec3bQ2V5DRXTWWYrz0Vwnurh+yndhiVZOMSLfU4vss9Dk0UMj6Vzg+ndAn1RhMtFR3K2E
        uSbfoyZXqEYnPO8QSeYC11cPMzW/JN4dSYYPlUnFxF/ipEjSOVz7ISinC6uv/5qRbKaQr75kqaCZq3MW
        6jSGANfTyTYK+ZZaJl2OHr7Wzn4kb42pcx4suSVvEck6heuqjDkOYFo+v2MkGwdUSDdqDto22ulEF9fT
        w68bNIVWLbJDgDWB/OU7/zldrAaaLNLv1uowivx1yrOOersS1UEv1r0jm9bgGg+aXC2NApPeOpJ1AteT
        X0xqa/kSw3P9TUGlNkNyashBE12deAlyHZ3WmnJYWuKMSNYqXOdG6LLJFeuhYCNvRttHVjOB/NR2z0V1
        H3yhl9NDIqvW4Vop780l1BO4WyRrFa5zS3SFLpqB5sOGPfNfBhXLma1dQpthWguTTd7y9EsFLl2Ouped
        TVRyLS0PpoKIVvENpI04O6FanoTY60uvY90Uc++jKOdM+5VQjL9OdzVyvU1R7otKS5ZHotZ6nOStyNKa
        +8hBH6KdI+k4oYKp46GXozGmvjwzc4UlL8Xn1wnAqS2qy9FXbKZf1Ry4pjaKaO1/WtQFVzw+bUPWcW2a
        MFPPZ0nyetQJO+p5fQxdjaZFa9zbRFU6hev+Hcr1RxBaVZnppiHy01f/HGVeg6Mj+Xihkpro+vCkuvnI
        a0zLZDeObGpDWn1R90U5G1SWo3H/AZHNXOD6crDJ/Yr0gXegDaP4c4Hr5zhzLUfLbjqss/b27uWQfmt0
        CqrzAhJvjyzGD5XVRFfObOjq6EdVI8np5JaRXSnYbIj08LwJpUJSrYQe/iMiu7lCOW6KLlChesyvUO0A
        KW1BWVJhw8v4Onoh0vCp0umKf9dw6c5I0Yma3NNC9/Toj4VbBSrc9CWwHD3U6r5ps4wCkGgCTN0uTaA1
        mbBajh7+I6O4vYDy3AnV7cF0hX4vxbfv1WnPlKfpS2AJjcv1QrgIvR3pHjsd6WX8eVRnKXQldO+2sqzc
        e6i4XgKpaCjzQEuCj41izhXKsRWS26g86IaAfju1qWLd9yLeA+VQzL1pH9Q20FBhMR/+JfgBNCl3HGo6
        0zxrfog6WR4qg+vr/ID9kXoy+rIOFe2p0CTm3DfiUAYF3tASWx/Qy+hxUbTFhh9CYyhtIVU3qw+chraK
        4nUK190IPQvVWaEYAnqJXYJ2j6p2DtfWC0Bj7T6gU7MegRb360/lN0eK654K6TQPdMPKa0vd2NZ33nEN
        +YdrzX4Wy299RxGOOtnDwHU0xNQyZ13Pyq74GVJEoFb2R/QSKns79DaU6303b7QE+VS0TlRhZpCn3EN1
        vl2uh+S0aBVFvQt9gfRQLNf3keI0doXOjWjl3Hvy1eqPPi5d1mca5KehCca5+E10ApXbEmk/QF/G+nX5
        EVKoq6m7beSheY/Hoja6+srz/eiV6AAkp5hbo/Xj8pVgp/kHBXLZDsmLTUOSs5E2QeXu96+DdoHOZMhF
        PjqBSPNJWo4cIvJF+Gc0nh4BlVGjKOxVH2dhmyCX4MbRbEirBytne3QumjvRIZk6YLLVA1fJXy8HxTHU
        0poOfplVm6pnonuk0aoB6fRCVVf/p2gM6PfQ5q5eLanWhgrICaeNMb5ml7UPXdGG5HX2RiQXV+m1SBN5
        epNqHK+ubRu9DgUO2TSqmgRbPTxyt00Fgkihh05fTd3wm0f2c4Hrr4vUS9ByllZPpkX7F2rtHcBey6R1
        PUtz0BD120gvOt1LuqdORLrHXoXkD6C9GvIPkD9AG8MN9eYeHlUdDhRau9nkLDEL5NCj8ZECKO6Iam/I
        IY0evtujvZFeENpoNIvurByRkv4C2Ghjjcbd06C4gTpjr7E7dJtQLu1b0FkHcmyZZn5H3WBNjKU88HQ9
        zc1on8a06IsrhzJ9dXVQ521Rbc880mjotCtSD0kfJ22GmgVnoA3iMv2Ggu6Cpllv1Qy8GkPReVrbs03e
        moDTC0Ff8tSZ/Sl00684xubvFRk5J9bASiidNuhM5Z/eNZRXO/LkGqt9900p3Q3K38stWpuWpkG9SHmP
        6nixmU/wCvLVS2p79Hyk3s00qIe1S2TdTyigtlY2ffurq34s6rxbyzXVldUOQb14mqKx+NaRpfLU3EdO
        fMGVUDdfcfYGcYR6GZRfPh4HoqYvAnWrVwmLzZ+1nt/UzVtDQb2sH4g6973nmjsg9W6aTlLq2erF3pRV
        oFDaaaelvSZ8Bmm9vRenn1COuyJ1uZq8yHQYpaILada9SZdfXdHXo1tEcUYB9dEO0CegnMCdq6MeoVyh
        9TXVqkaT3pTaReP2uYQCWx3Kod7n0ajJ7yE0H9GPY/UoiMb7Tbpj2p9+v8imd1A2+Sto8qeuK67GsL8t
        /rcW6i3UPiJ7SFC/NZFiETT5fb4S/62DelJaIenrvIl6SNrZ2mQ5WBOfWUu7rUEBboLqelnJsUbHOQ3i
        qCvKqRDOs1y2Wx2N7ToLmdUHqK+CZaTO9JsW+S704oufgnJquKheTt3ejXrP83m5cWHNeNad2NAw4UaR
        xWCgzHpTa2Z3FjPOS2g8qnH+sNd6p4C6yx9+1s5QWnbeIy4xKCi3ho51e9NaHbppZNENXFC+67nHWQn5
        PD8skg8W6qA15zpx8MvQV7+1ENlDgt9BsRmbTpaujpae5xqJaFoov+Y6NBmu+aBcNJzuZpmQC2nGvM5D
        oKCS3b6hWoS6aBz7OlWsIXIsadVjb4jwm2hNv+kKkh6WQyKrUUB9tHyYOjtwOXrOWlnO/BtcQF1heT7l
        0stz7GYB9XoMqjNBuDSbPcyz3juA30bHyNUdEqjLv2NkMSqol04+rrM0rUAs7c2tkbm2rOagmfBjItko
        oX7abJOLZr1ndpjomOF3kpNPnZte81C9OFeyDaiblti1LJ3L8yPpbCHjPVHOF082h0eyUUL9cs51X0JO
        H4Py5Js3/F666bXfIRdNnPVjXbwFqJs2O+UOO/Xxne3Hhgy1Jp6zdquLHxTJRgn10+aX3H0E6s6O64y3
        juB301xLnbj6+kp2eqRcl6huSE5iOWgPwpaRdDrISOP+3HXwgyPZKKF+2iSSG7xDrs2LE+mlBfj9NCOu
        XXe5PD2SjhLqp5eAQtznIEeh6V+IZKIliRxeFklGCfXTya65Ibn18Hd6Yu9Y4XfUTa/txjloFWGnSDpK
        qJ/cqrWSlMN0Ye3JYFuUE/RBBzIOwrOvKdQvd6+Ddpn9bVOQmR5+T/UEcgN6KnLTJpF0lFA/+U7kOOFp
        l2vzXiiJcwItyEd7nKeZBtRPOwVzkKegJ/xagN91HXS5fuQMLopko4U6yiktZzh6QSSpBwkVzSeFHDBm
        eqhi36B+2tsuT8YUcu19eCQzLcDvqy9f7qagUc9HCeqouJI5PCCS5EECzcAqHFKKZ0SS0UIdFdklh6Mi
        iWkRfuctkIZZKfR1nGvItC6gjjlDI7kK5w/RMVZgjxRaex37uF/7z3N4dyQxHcDvrbBdOT4pH4gko4U6
        boy0wzZF3lF3GGqWMRXSS93d7SLJKKF+OlQixy1Vk04bRzLTEfzm2kmZwyoRhcYIdTyoqGolmjRMf7Ax
        ko97ilPDfLRQR4VuSiHHp10jiekQfnd5C+qUoRQKHzb2SWqtklyhyiaoPpEJA625pkJZaWw19mUWRRDO
        Cd/9vEhi5gC/v9opJ6DrCyLJaKGO2kiVGhZ9IsxXBgNF9E2xCD+mAkem0Gx054ElzarQBoo+nELLs5tF
        ktFCHS+e1Laa7cP82vCPKWcX/ZBj//rr5B517VO4698DaAetWOU4xZwYSUYLddytqGolJ4T5qvAPcnVN
        ORacEuajhTpeWFS1krPC3PQA2uP+RbNUIo/WUUVbXgnqqENXq5BPy7XPt+QvHz3553I0vpjLufldQf3u
        PqlpNYpVbz//nkGb5KyHnxzmo4U67l9UtZI9w/wa+MtUXLbLw3S0UEedXpziH8Pc9AjaZXOU2reiCcPR
        Bg8R1E89+dTW/beGeQF/oS2/qXPMDgvzUUL9FOU4NfOv32hho/j2Hdrm1EkrVbMI3qupCEI/RtdsFeYP
        qdl/BcDIPgl3iFC/l0xqWs3xYW56CO2jsNqpYC1ychv16g3101HxKa5ZDeAPqZv/g2E6SqifZpJTZ8tf
        jezx13NoozMnrVXN4EPUV0H95M2bOn/wmqEsf/hQ8XelPDtMRwn103l+KVZePjG9gnbaBqWWcc8L89FC
        HVOb2N6zZCjvv9TbYuxRVt5ZVLMUdStvGeam59BWqaVcbWMf+2SgTrKq4kdLhopzV4Wcf0YZ219QNx1u
        mjqTbfQBJsYE7aUjx1I8McxHCfXTKdcpbibDvYv/L+XjkecooX45m5/2C3MzAGgvbRRK9WovC/NRQv20
        spdaFt1Dhqmgn6dFnqOE+qVCT8vxZ90wNwOBNktFE1YA0UGfI5iC+qWiJx0lozcU/1/KMyO/0UHd9Jb8
        xaSW5Zwe5mZA0G73KZqvkn3CfJRQv5R35GtklJowubbb4EigbtpCmWL3MDcDgnbT5HYqsM0ZYT5KqN+L
        i2qWcp6MUrHuFRVHce7HqFRsOXX/veV3oNB2qd6tVgNWui/GotT9fYV+pDpHEC8aF8e9ZAYI7bdP0Yym
        hG/pR8oJeb2oHBv3khkgtJ+O184JHrqoXKUfSS6uZmXuEfeSGSi04VeLpjQr8Bv9QIrwa66NtlR6/D9w
        aMPcY7UXkT/pBzIrM/qY8osA7bhv0ZxmJfwCKOe1cQ+ZAUM73rloTrMSfgGUc0TcQ2bA0I6KkJMT5HUh
        0Q/0MKTlkkVTao3UDkAjgbZMOQSdjVa6R8auUcdFqITKp3YA3ipMzcChLS8tmrSU0YcMN8ugwTcs2r0U
        bYEe9cGniwRt+fpJq5ZzTpiaRYAGV9SYKr4XpmYE0J7HFc1aykfC1CwCNPiuRbuX8sUwNSOA9nxy0ayl
        fCNMzSJAg+9RtHspoz8DYZGgPR9fNGspPwxTswjQ4KkoSN4ENCJoz0cWzVrKz8PULAI0eCoM2LlhakYA
        7fnAollLuTpMzSJAgx9StHspbwtTMwJoz3sVzVrKn8PULAI0+GFFu5fypjA1I4D2TB76GqZmEaC9/QJY
        IGhPvwDMNdDefgEsELSnXwDmGmjvQ4tmL2XUodAXDdpzx6JZS/EcwCJBg+9ftHspZ4epGQG05+5Fs5by
        6zA1iwANnjoMdNSnIS8atOd+RbOWcmWYmkWABk+NCe0ZNiJoz+OLZi3lijA1iwANrgNBq1Ak2U3C3Awc
        2jJ1VPaZYWoWBRpdB55UMepjoxYF2lHHv/160qLlPDfMzaJAo59XtH0p3iM+AmjHlBuw2C3MzaJAox9R
        tH0pihi0UZibgUIbnjVpzXJ0hPY6YW4WBRp9K5Q6NeZ5YW4GCO23JdIx4FVcEuZm0aDx/7W4B0r5Jdo4
        zM3AoO1On7RiNY8Jc7No0PhPKu6BSuwVOEBot51Qqoen059vGEnMokHjr4t+rjuhAt1Ee0USMwBorw2Q
        jsdO8epIYhYVboLnFPdCJb9C20QS02NoJy37XaBGS6DJv5tFMrOocBPIKejHuiMSXIm2jGSmh9A+a6C3
        qbEyeGUkM4sON8Oji3siyVVou0hmegTtsjY6V42UgV7m60VSs+hwM1wXXaI7I4PfowMjqekBtMdt0efV
        OBloTmfPSGpMATfFpijlHrycC9FtIrmZA/z++urr0A+d5JSLT302K8PNsQv6w+Q2yUNOJhpzeljQIfze
        G6GnoB+hOnwSrRXZGHNtuEF0ZkCT46S/hF6MFHxi08jOzAB+Tx3xvQOS+/b5qM5LeomvoxtHlsaUw41y
        MPqz7popuBrpWOqvos9ZjaS1fPlppBx6Unwb+bRnkw83zMNQ6ghx038+i9wjM/XhxlEwSX3FzTB5O7Kr
        r2kON5AmnFKxA0y/+C16QjShMdPDDaVAoj/Q3WV6jZZnPd43s4cbay10IPoOMv3ig2jHaCpj2oMbbU30
        CPRe9Edk5oP8AF6Jto2mMaZbuPk2RFoxOBl9GmnnoJk98s3QEOwidCxSaPc1ohmM6Q/cmJugbZFWEeQY
        ZDXTbuhuSOHb1o6f1xhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhj
        jDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhj
        jDHGGGOMMeZvXOc6fwWFv+/q91lkogAAAABJRU5ErkJggg==
</value>
  </data>
</root>